<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Uservice.Logging</name>
    </assembly>
    <members>
        <member name="T:LibOwin.CookieOptions">
            <summary>
            Options used to create a new cookie.
            </summary>
        </member>
        <member name="M:LibOwin.CookieOptions.#ctor">
            <summary>
            Creates a default cookie with a path of '/'.
            </summary>
        </member>
        <member name="P:LibOwin.CookieOptions.Domain">
            <summary>
            Gets or sets the domain to associate the cookie with.
            </summary>
            <returns>The domain to associate the cookie with.</returns>
        </member>
        <member name="P:LibOwin.CookieOptions.Path">
            <summary>
            Gets or sets the cookie path.
            </summary>
            <returns>The cookie path.</returns>
        </member>
        <member name="P:LibOwin.CookieOptions.Expires">
            <summary>
            Gets or sets the expiration date and time for the cookie.
            </summary>
            <returns>The expiration date and time for the cookie.</returns>
        </member>
        <member name="P:LibOwin.CookieOptions.Secure">
            <summary>
            Gets or sets a value that indicates whether to transmit the cookie using Secure Sockets Layer (SSL)â€”that is, over HTTPS only.
            </summary>
            <returns>true to transmit the cookie only over an SSL connection (HTTPS); otherwise, false.</returns>
        </member>
        <member name="P:LibOwin.CookieOptions.HttpOnly">
            <summary>
            Gets or sets a value that indicates whether a cookie is accessible by client-side script.
            </summary>
            <returns>true if a cookie is accessible by client-side script; otherwise, false.</returns>
        </member>
        <member name="T:LibOwin.FormCollection">
            <summary>
            Contains the parsed form values.
            </summary>
        </member>
        <member name="M:LibOwin.FormCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Owin.FormCollection" /> class.
            </summary>
            <param name="store">The store for the form.</param>
        </member>
        <member name="T:LibOwin.HeaderDictionary">
            <summary>
            Represents a wrapper for owin.RequestHeaders and owin.ResponseHeaders.
            </summary>
        </member>
        <member name="M:LibOwin.HeaderDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Owin.HeaderDictionary" /> class.
            </summary>
            <param name="store">The underlying data store.</param>
        </member>
        <member name="P:LibOwin.HeaderDictionary.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:Microsoft.Owin.HeaderDictionary" />;.
            </summary>
            <returns>An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:Microsoft.Owin.HeaderDictionary" />.</returns>
        </member>
        <member name="P:LibOwin.HeaderDictionary.Values">
             <summary>
            
             </summary>
        </member>
        <member name="P:LibOwin.HeaderDictionary.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Microsoft.Owin.HeaderDictionary" />;.
            </summary>
            <returns>The number of elements contained in the <see cref="T:Microsoft.Owin.HeaderDictionary" />.</returns>
        </member>
        <member name="P:LibOwin.HeaderDictionary.IsReadOnly">
            <summary>
            Gets a value that indicates whether the <see cref="T:Microsoft.Owin.HeaderDictionary" /> is in read-only mode.
            </summary>
            <returns>true if the <see cref="T:Microsoft.Owin.HeaderDictionary" /> is in read-only mode; otherwise, false.</returns>
        </member>
        <member name="P:LibOwin.HeaderDictionary.Item(System.String)">
            <summary>
            Get or sets the associated value from the collection as a single string.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated value from the collection as a single string or null if the key is not present.</returns>
        </member>
        <member name="P:LibOwin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#Item(System.String)">
            <summary>
            Throws KeyNotFoundException if the key is not present.
            </summary>
            <param name="key">The header name.</param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.HeaderDictionary.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:LibOwin.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:LibOwin.HeaderDictionary.Get(System.String)">
            <summary>
            Get the associated value from the collection as a single string.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated value from the collection as a single string or null if the key is not present.</returns>
        </member>
        <member name="M:LibOwin.HeaderDictionary.GetValues(System.String)">
            <summary>
            Get the associated values from the collection without modification.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated value from the collection without modification, or null if the key is not present.</returns>
        </member>
        <member name="M:LibOwin.HeaderDictionary.GetCommaSeparatedValues(System.String)">
            <summary>
            Get the associated values from the collection separated into individual values.
            Quoted values will not be split, and the quotes will be removed.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated values from the collection separated into individual values, or null if the key is not present.</returns>
        </member>
        <member name="M:LibOwin.HeaderDictionary.Append(System.String,System.String)">
            <summary>
            Add a new value. Appends to the header if already present
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:LibOwin.HeaderDictionary.AppendValues(System.String,System.String[])">
            <summary>
            Add new values. Each item remains a separate array entry.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:LibOwin.HeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])">
            <summary>
            Quotes any values containing comas, and then coma joins all of the values with any existing values.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:LibOwin.HeaderDictionary.Set(System.String,System.String)">
            <summary>
            Sets a specific header value.
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:LibOwin.HeaderDictionary.SetValues(System.String,System.String[])">
            <summary>
            Sets the specified header values without modification.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:LibOwin.HeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])">
            <summary>
            Quotes any values containing comas, and then coma joins all of the values.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:LibOwin.HeaderDictionary.Add(System.String,System.String[])">
            <summary>
            Adds the given header and values to the collection.
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The header values.</param>
        </member>
        <member name="M:LibOwin.HeaderDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:Microsoft.Owin.HeaderDictionary" /> contains a specific key.
            </summary>
            <param name="key">The key.</param>
            <returns>true if the <see cref="T:Microsoft.Owin.HeaderDictionary" /> contains a specific key; otherwise, false.</returns>
        </member>
        <member name="M:LibOwin.HeaderDictionary.Remove(System.String)">
            <summary>
            Removes the given header from the collection.
            </summary>
            <param name="key">The header name.</param>
            <returns>true if the specified object was removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:LibOwin.HeaderDictionary.TryGetValue(System.String,System.String[]@)">
            <summary>
            Retrieves a value from the dictionary.
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The value.</param>
            <returns>true if the <see cref="T:Microsoft.Owin.HeaderDictionary" /> contains the key; otherwise, false.</returns>
        </member>
        <member name="M:LibOwin.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.String[]})">
            <summary>
            Adds a new list of items to the collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:LibOwin.HeaderDictionary.Clear">
            <summary>
            Clears the entire list of objects.
            </summary>
        </member>
        <member name="M:LibOwin.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String[]})">
            <summary>
            Returns a value indicating whether the specified object occurs within this collection.
            </summary>
            <param name="item">The item.</param>
            <returns>true if the specified object occurs within this collection; otherwise, false.</returns>
        </member>
        <member name="M:LibOwin.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String[]}[],System.Int32)">
            <summary>
            Copies the <see cref="T:Microsoft.Owin.HeaderDictionary" /> elements to a one-dimensional Array instance at the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the specified objects copied from the <see cref="T:Microsoft.Owin.HeaderDictionary" />.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:LibOwin.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String[]})">
            <summary>
            Removes the given item from the the collection.
            </summary>
            <param name="item">The item.</param>
            <returns>true if the specified object was removed from the collection; otherwise, false.</returns>
        </member>
        <member name="T:LibOwin.HostString">
            <summary>
            Represents the host portion of a Uri can be used to construct Uri's properly formatted and encoded for use in
            HTTP headers.
            </summary>
        </member>
        <member name="M:LibOwin.HostString.#ctor(System.String)">
            <summary>
            Creates a new HostString without modification. The value should be Unicode rather than punycode, and may have a port.
            IPv4 and IPv6 addresses are also allowed, and also may have ports.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:LibOwin.HostString.Value">
            <summary>
            Returns the original value from the constructor.
            </summary>
        </member>
        <member name="M:LibOwin.HostString.ToString">
            <summary>
            Returns the value as normalized by ToUriComponent().
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibOwin.HostString.ToUriComponent">
            <summary>
            Returns the value properly formatted and encoded for use in a URI in a HTTP header.
            Any Unicode is converted to punycode. IPv6 addresses will have brackets added if they are missing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibOwin.HostString.FromUriComponent(System.String)">
            <summary>
            Creates a new HostString from the given uri component.
            Any punycode will be converted to Unicode.
            </summary>
            <param name="uriComponent"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.HostString.FromUriComponent(System.Uri)">
            <summary>
            Creates a new HostString from the host and port of the give Uri instance.
            Punycode will be converted to Unicode.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.HostString.Equals(LibOwin.HostString)">
            <summary>
            Compares the equality of the Value property, ignoring case.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.HostString.Equals(System.Object)">
            <summary>
            Compares against the given object only if it is a HostString.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.HostString.GetHashCode">
            <summary>
            Gets a hash code for the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibOwin.HostString.op_Equality(LibOwin.HostString,LibOwin.HostString)">
            <summary>
            Compares the two instances for equality.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.HostString.op_Inequality(LibOwin.HostString,LibOwin.HostString)">
            <summary>
            Compares the two instances for inequality.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:LibOwin.IFormCollection">
            <summary>
            Contains the parsed form values.
            </summary>
        </member>
        <member name="T:LibOwin.IHeaderDictionary">
            <summary>
            Represents a wrapper for owin.RequestHeaders and owin.ResponseHeaders.
            </summary>
        </member>
        <member name="P:LibOwin.IHeaderDictionary.Item(System.String)">
            <summary>
            Get or sets the associated value from the collection as a single string.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated value from the collection as a single string or null if the key is not present.</returns>
        </member>
        <member name="M:LibOwin.IHeaderDictionary.GetCommaSeparatedValues(System.String)">
            <summary>
            Get the associated values from the collection separated into individual values.
            Quoted values will not be split, and the quotes will be removed.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated values from the collection separated into individual values, or null if the key is not present.</returns>
        </member>
        <member name="M:LibOwin.IHeaderDictionary.Append(System.String,System.String)">
            <summary>
            Add a new value. Appends to the header if already present
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:LibOwin.IHeaderDictionary.AppendValues(System.String,System.String[])">
            <summary>
            Add new values. Each item remains a separate array entry.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:LibOwin.IHeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])">
            <summary>
            Quotes any values containing comas, and then coma joins all of the values with any existing values.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:LibOwin.IHeaderDictionary.Set(System.String,System.String)">
            <summary>
            Sets a specific header value.
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:LibOwin.IHeaderDictionary.SetValues(System.String,System.String[])">
            <summary>
            Sets the specified header values without modification.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:LibOwin.IHeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])">
            <summary>
            Quotes any values containing comas, and then coma joins all of the values.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="T:LibOwin.IOwinContext">
            <summary>
            This wraps OWIN environment dictionary and provides strongly typed accessors.
            </summary>
        </member>
        <member name="P:LibOwin.IOwinContext.Request">
            <summary>
            Gets a wrapper exposing request specific properties.
            </summary>
            <returns>A wrapper exposing request specific properties.</returns>
        </member>
        <member name="P:LibOwin.IOwinContext.Response">
            <summary>
            Gets a wrapper exposing response specific properties.
            </summary>
            <returns>A wrapper exposing response specific properties.</returns>
        </member>
        <member name="P:LibOwin.IOwinContext.Environment">
            <summary>
            Gets the OWIN environment.
            </summary>
            <returns>The OWIN environment.</returns>
        </member>
        <member name="P:LibOwin.IOwinContext.TraceOutput">
            <summary>
            Gets or sets the host.TraceOutput environment value.
            </summary>
            <returns>The host.TraceOutput TextWriter.</returns>
        </member>
        <member name="M:LibOwin.IOwinContext.Get``1(System.String)">
            <summary>
            Gets a value from the OWIN environment, or returns default(T) if not present.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to get.</param>
            <returns>The value with the specified key or the default(T) if not present.</returns>
        </member>
        <member name="M:LibOwin.IOwinContext.Set``1(System.String,``0)">
            <summary>
            Sets the given key and value in the OWIN environment.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to set.</param>
            <param name="value">The value to set.</param>
            <returns>This instance.</returns>
        </member>
        <member name="T:LibOwin.IOwinRequest">
            <summary>
            This wraps OWIN environment dictionary and provides strongly typed accessors.
            </summary>
        </member>
        <member name="P:LibOwin.IOwinRequest.Environment">
            <summary>
            Gets the OWIN environment.
            </summary>
            <returns>The OWIN environment.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Context">
            <summary>
            Gets the request context.
            </summary>
            <returns>The request context.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Method">
            <summary>
            Gets or set the HTTP method.
            </summary>
            <returns>The HTTP method.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Scheme">
            <summary>
            Gets or set the HTTP request scheme from owin.RequestScheme.
            </summary>
            <returns>The HTTP request scheme from owin.RequestScheme.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.IsSecure">
            <summary>
            Returns true if the owin.RequestScheme is https.
            </summary>
            <returns>true if this request is using https; otherwise, false.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Host">
            <summary>
            Gets or set the Host header. May include the port.
            </summary>
            <return>The Host header.</return>
        </member>
        <member name="P:LibOwin.IOwinRequest.PathBase">
            <summary>
            Gets or set the owin.RequestPathBase.
            </summary>
            <returns>The owin.RequestPathBase.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Path">
            <summary>
            Gets or set the request path from owin.RequestPath.
            </summary>
            <returns>The request path from owin.RequestPath.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.QueryString">
            <summary>
            Gets or set the query string from owin.RequestQueryString.
            </summary>
            <returns>The query string from owin.RequestQueryString.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Query">
            <summary>
            Gets the query value collection parsed from owin.RequestQueryString.
            </summary>
            <returns>The query value collection parsed from owin.RequestQueryString.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Uri">
            <summary>
            Gets the uniform resource identifier (URI) associated with the request.
            </summary>
            <returns>The uniform resource identifier (URI) associated with the request.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Protocol">
            <summary>
            Gets or set the owin.RequestProtocol.
            </summary>
            <returns>The owin.RequestProtocol.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Headers">
            <summary>
            Gets the request headers.
            </summary>
            <returns>The request headers.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Cookies">
            <summary>
            Gets the collection of Cookies for this request.
            </summary>
            <returns>The collection of Cookies for this request.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.ContentType">
            <summary>
            Gets or sets the Content-Type header.
            </summary>
            <returns>The Content-Type header.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.CacheControl">
            <summary>
            Gets or sets the Cache-Control header.
            </summary>
            <returns>The Cache-Control header.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.MediaType">
            <summary>
            Gets or sets the Media-Type header.
            </summary>
            <returns>The Media-Type header.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Accept">
            <summary>
            Gets or set the Accept header.
            </summary>
            <returns>The Accept header.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.Body">
            <summary>
            Gets or set the owin.RequestBody Stream.
            </summary>
            <returns>The owin.RequestBody Stream.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.CallCancelled">
            <summary>
            Gets or sets the cancellation token for the request.
            </summary>
            <returns>The cancellation token for the request.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.LocalIpAddress">
            <summary>
            Gets or set the server.LocalIpAddress.
            </summary>
            <returns>The server.LocalIpAddress.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.LocalPort">
            <summary>
            Gets or set the server.LocalPort.
            </summary>
            <returns>The server.LocalPort.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.RemoteIpAddress">
            <summary>
            Gets or set the server.RemoteIpAddress.
            </summary>
            <returns>The server.RemoteIpAddress.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.RemotePort">
            <summary>
            Gets or set the server.RemotePort.
            </summary>
            <returns>The server.RemotePort.</returns>
        </member>
        <member name="P:LibOwin.IOwinRequest.User">
            <summary>
            Gets or set the owin.RequestUser (or gets server.User for non-standard implementations).
            </summary>
            <returns>The server.User.</returns>
        </member>
        <member name="M:LibOwin.IOwinRequest.ReadFormAsync">
            <summary>
            Asynchronously reads and parses the request body as a form.
            </summary>
            <returns>The parsed form data.</returns>
        </member>
        <member name="M:LibOwin.IOwinRequest.Get``1(System.String)">
            <summary>
            Gets a value from the OWIN environment, or returns default(T) if not present.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to get.</param>
            <returns>The value with the specified key or the default(T) if not present.</returns>
        </member>
        <member name="M:LibOwin.IOwinRequest.Set``1(System.String,``0)">
            <summary>
            Sets the given key and value in the OWIN environment.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to set.</param>
            <param name="value">The value to set.</param>
            <returns>This instance.</returns>
        </member>
        <member name="T:LibOwin.IOwinResponse">
            <summary>
            This wraps OWIN environment dictionary and provides strongly typed accessors.
            </summary>
        </member>
        <member name="P:LibOwin.IOwinResponse.Environment">
            <summary>
            Gets the OWIN environment.
            </summary>
            <returns>The OWIN environment.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.Context">
            <summary>
            Gets the request context.
            </summary>
            <returns>The request context.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.StatusCode">
            <summary>
            Gets or sets the optional owin.ResponseStatusCode.
            </summary>
            <returns>The optional owin.ResponseStatusCode, or 200 if not set.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.ReasonPhrase">
            <summary>
            Gets or sets the the optional owin.ResponseReasonPhrase.
            </summary>
            <returns>The the optional owin.ResponseReasonPhrase.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.Protocol">
            <summary>
            Gets or sets the owin.ResponseProtocol.
            </summary>
            <returns>The owin.ResponseProtocol.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.Headers">
            <summary>
            Gets the response header collection.
            </summary>
            <returns>The response header collection.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.Cookies">
            <summary>
            Gets a collection used to manipulate the Set-Cookie header.
            </summary>
            <returns>A collection used to manipulate the Set-Cookie header.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.ContentLength">
            <summary>
            Gets or sets the Content-Length header.
            </summary>
            <returns>The Content-Length header.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.ContentType">
            <summary>
            Gets or sets the Content-Type header.
            </summary>
            <returns>The Content-Type header.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.Expires">
            <summary>
            Gets or sets the Expires header.
            </summary>
            <returns>The Expires header.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.ETag">
            <summary>
            Gets or sets the E-Tag header.
            </summary>
            <returns>The E-Tag header.</returns>
        </member>
        <member name="P:LibOwin.IOwinResponse.Body">
            <summary>
            Gets or sets the owin.ResponseBody Stream.
            </summary>
            <returns>The owin.ResponseBody Stream.</returns>
        </member>
        <member name="M:LibOwin.IOwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object)">
            <summary>
            Registers for an event that fires when the response headers are sent.
            </summary>
            <param name="callback">The callback method.</param>
            <param name="state">The callback state.</param>
        </member>
        <member name="M:LibOwin.IOwinResponse.Redirect(System.String)">
            <summary>
            Sets a 302 response status code and the Location header.
            </summary>
            <param name="location">The location where to redirect the client.</param>
        </member>
        <member name="M:LibOwin.IOwinResponse.Write(System.String)">
            <summary>
            Writes the given text to the response body stream using UTF-8.
            </summary>
            <param name="text">The response data.</param>
        </member>
        <member name="M:LibOwin.IOwinResponse.Write(System.Byte[])">
            <summary>
            Writes the given bytes to the response body stream.
            </summary>
            <param name="data">The response data.</param>
        </member>
        <member name="M:LibOwin.IOwinResponse.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes the given bytes to the response body stream.
            </summary>
            <param name="data">The response data.</param>
            <param name="offset">The zero-based byte offset in the <paramref name="data" /> parameter at which to begin copying bytes.</param>
            <param name="count">The number of bytes to write.</param>
        </member>
        <member name="M:LibOwin.IOwinResponse.WriteAsync(System.String)">
            <summary>
            Asynchronously writes the given text to the response body stream using UTF-8.
            </summary>
            <param name="text">The response data.</param>
            <returns>A Task tracking the state of the write operation.</returns>
        </member>
        <member name="M:LibOwin.IOwinResponse.WriteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the given text to the response body stream using UTF-8.
            </summary>
            <param name="text">The response data.</param>
            <param name="token">A token used to indicate cancellation.</param>
            <returns>A Task tracking the state of the write operation.</returns>
        </member>
        <member name="M:LibOwin.IOwinResponse.WriteAsync(System.Byte[])">
            <summary>
            Asynchronously writes the given bytes to the response body stream.
            </summary>
            <param name="data">The response data.</param>
            <returns>A Task tracking the state of the write operation.</returns>
        </member>
        <member name="M:LibOwin.IOwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the given bytes to the response body stream.
            </summary>
            <param name="data">The response data.</param>
            <param name="token">A token used to indicate cancellation.</param>
            <returns>A Task tracking the state of the write operation.</returns>
        </member>
        <member name="M:LibOwin.IOwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the given bytes to the response body stream.
            </summary>
            <param name="data">The response data.</param>
            <param name="offset">The zero-based byte offset in the <paramref name="data" /> parameter at which to begin copying bytes.</param>
            <param name="count">The number of bytes to write.</param>
            <param name="token">A token used to indicate cancellation.</param>
            <returns>A Task tracking the state of the write operation.</returns>
        </member>
        <member name="M:LibOwin.IOwinResponse.Get``1(System.String)">
            <summary>
            Gets a value from the OWIN environment, or returns default(T) if not present.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to get.</param>
            <returns>The value with the specified key or the default(T) if not present.</returns>
        </member>
        <member name="M:LibOwin.IOwinResponse.Set``1(System.String,``0)">
            <summary>
            Sets the given key and value in the OWIN environment.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to set.</param>
            <param name="value">The value to set.</param>
            <returns>This instance.</returns>
        </member>
        <member name="T:LibOwin.IReadableStringCollection">
            <summary>
            Accessors for headers, query, forms, etc.
            </summary>
        </member>
        <member name="P:LibOwin.IReadableStringCollection.Item(System.String)">
            <summary>
            Get the associated value from the collection.  Multiple values will be merged.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.IReadableStringCollection.Get(System.String)">
            <summary>
            Get the associated value from the collection.  Multiple values will be merged.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.IReadableStringCollection.GetValues(System.String)">
            <summary>
            Get the associated values from the collection in their original format.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:LibOwin.OwinContext">
            <summary>
            This wraps OWIN environment dictionary and provides strongly typed accessors.
            </summary>
        </member>
        <member name="M:LibOwin.OwinContext.#ctor">
            <summary>
            Create a new context with only request and response header collections.
            </summary>
        </member>
        <member name="M:LibOwin.OwinContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new wrapper.
            </summary>
            <param name="environment">OWIN environment dictionary which stores state information about the request, response and relevant server state.</param>
        </member>
        <member name="P:LibOwin.OwinContext.Request">
            <summary>
            Gets a wrapper exposing request specific properties.
            </summary>
            <returns>A wrapper exposing request specific properties.</returns>
        </member>
        <member name="P:LibOwin.OwinContext.Response">
            <summary>
            Gets a wrapper exposing response specific properties.
            </summary>
            <returns>A wrapper exposing response specific properties.</returns>
        </member>
        <member name="P:LibOwin.OwinContext.Environment">
            <summary>
            Gets the OWIN environment.
            </summary>
            <returns>The OWIN environment.</returns>
        </member>
        <member name="P:LibOwin.OwinContext.TraceOutput">
            <summary>
            Gets or sets the host.TraceOutput environment value.
            </summary>
            <returns>The host.TraceOutput TextWriter.</returns>
        </member>
        <member name="M:LibOwin.OwinContext.Get``1(System.String)">
            <summary>
            Gets a value from the OWIN environment, or returns default(T) if not present.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to get.</param>
            <returns>The value with the specified key or the default(T) if not present.</returns>
        </member>
        <member name="M:LibOwin.OwinContext.Set``1(System.String,``0)">
            <summary>
            Sets the given key and value in the OWIN environment.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to set.</param>
            <param name="value">The value to set.</param>
            <returns>This instance.</returns>
        </member>
        <member name="T:LibOwin.OwinRequest">
            <summary>
            This wraps OWIN environment dictionary and provides strongly typed accessors.
            </summary>
        </member>
        <member name="M:LibOwin.OwinRequest.#ctor">
            <summary>
            Create a new context with only request and response header collections.
            </summary>
        </member>
        <member name="M:LibOwin.OwinRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new environment wrapper exposing request properties.
            </summary>
            <param name="environment">OWIN environment dictionary which stores state information about the request, response and relevant server state.</param>
        </member>
        <member name="P:LibOwin.OwinRequest.Environment">
            <summary>
            Gets the OWIN environment.
            </summary>
            <returns>The OWIN environment.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Context">
            <summary>
            Gets the request context.
            </summary>
            <returns>The request context.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Method">
            <summary>
            Gets or set the HTTP method.
            </summary>
            <returns>The HTTP method.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Scheme">
            <summary>
            Gets or set the HTTP request scheme from owin.RequestScheme.
            </summary>
            <returns>The HTTP request scheme from owin.RequestScheme.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.IsSecure">
            <summary>
            Returns true if the owin.RequestScheme is https.
            </summary>
            <returns>true if this request is using https; otherwise, false.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Host">
            <summary>
            Gets or set the Host header. May include the port.
            </summary>
            <return>The Host header.</return>
        </member>
        <member name="P:LibOwin.OwinRequest.PathBase">
            <summary>
            Gets or set the owin.RequestPathBase.
            </summary>
            <returns>The owin.RequestPathBase.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Path">
            <summary>
            Gets or set the request path from owin.RequestPath.
            </summary>
            <returns>The request path from owin.RequestPath.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.QueryString">
            <summary>
            Gets or set the query string from owin.RequestQueryString.
            </summary>
            <returns>The query string from owin.RequestQueryString.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Query">
            <summary>
            Gets the query value collection parsed from owin.RequestQueryString.
            </summary>
            <returns>The query value collection parsed from owin.RequestQueryString.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Uri">
            <summary>
            Gets the uniform resource identifier (URI) associated with the request.
            </summary>
            <returns>The uniform resource identifier (URI) associated with the request.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Protocol">
            <summary>
            Gets or set the owin.RequestProtocol.
            </summary>
            <returns>The owin.RequestProtocol.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Headers">
            <summary>
            Gets the request headers.
            </summary>
            <returns>The request headers.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Cookies">
            <summary>
            Gets the collection of Cookies for this request.
            </summary>
            <returns>The collection of Cookies for this request.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.ContentType">
            <summary>
            Gets or sets the Content-Type header.
            </summary>
            <returns>The Content-Type header.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.CacheControl">
            <summary>
            Gets or sets the Cache-Control header.
            </summary>
            <returns>The Cache-Control header.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.MediaType">
            <summary>
            Gets or sets the Media-Type header.
            </summary>
            <returns>The Media-Type header.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Accept">
            <summary>
            Gets or set the Accept header.
            </summary>
            <returns>The Accept header.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.Body">
            <summary>
            Gets or set the owin.RequestBody Stream.
            </summary>
            <returns>The owin.RequestBody Stream.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.CallCancelled">
            <summary>
            Gets or sets the cancellation token for the request.
            </summary>
            <returns>The cancellation token for the request.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.LocalIpAddress">
            <summary>
            Gets or set the server.LocalIpAddress.
            </summary>
            <returns>The server.LocalIpAddress.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.LocalPort">
            <summary>
            Gets or set the server.LocalPort.
            </summary>
            <returns>The server.LocalPort.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.RemoteIpAddress">
            <summary>
            Gets or set the server.RemoteIpAddress.
            </summary>
            <returns>The server.RemoteIpAddress.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.RemotePort">
            <summary>
            Gets or set the server.RemotePort.
            </summary>
            <returns>The server.RemotePort.</returns>
        </member>
        <member name="P:LibOwin.OwinRequest.User">
            <summary>
            Gets or set the owin.RequestUser (or gets server.User for non-standard implementations).
            </summary>
            <returns>The server.User.</returns>
        </member>
        <member name="M:LibOwin.OwinRequest.ReadFormAsync">
            <summary>
            Asynchronously reads and parses the request body as a form.
            </summary>
            <returns>The parsed form data.</returns>
        </member>
        <member name="M:LibOwin.OwinRequest.Get``1(System.String)">
            <summary>
            Gets a value from the OWIN environment, or returns default(T) if not present.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to get.</param>
            <returns>The value with the specified key or the default(T) if not present.</returns>
        </member>
        <member name="M:LibOwin.OwinRequest.Set``1(System.String,``0)">
            <summary>
            Sets the given key and value in the OWIN environment.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to set.</param>
            <param name="value">The value to set.</param>
            <returns>This instance.</returns>
        </member>
        <member name="T:LibOwin.OwinResponse">
            <summary>
            This wraps OWIN environment dictionary and provides strongly typed accessors.
            </summary>
        </member>
        <member name="M:LibOwin.OwinResponse.#ctor">
            <summary>
            Create a new context with only request and response header collections.
            </summary>
        </member>
        <member name="M:LibOwin.OwinResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a new environment wrapper exposing response properties.
            </summary>
            <param name="environment">OWIN environment dictionary which stores state information about the request, response and relevant server state.</param>
        </member>
        <member name="P:LibOwin.OwinResponse.Environment">
            <summary>
            Gets the OWIN environment.
            </summary>
            <returns>The OWIN environment.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.Context">
            <summary>
            Gets the request context.
            </summary>
            <returns>The request context.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.StatusCode">
            <summary>
            Gets or sets the optional owin.ResponseStatusCode.
            </summary>
            <returns>The optional owin.ResponseStatusCode, or 200 if not set.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.ReasonPhrase">
            <summary>
            Gets or sets the the optional owin.ResponseReasonPhrase.
            </summary>
            <returns>The the optional owin.ResponseReasonPhrase.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.Protocol">
            <summary>
            Gets or sets the owin.ResponseProtocol.
            </summary>
            <returns>The owin.ResponseProtocol.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.Headers">
            <summary>
            Gets the response header collection.
            </summary>
            <returns>The response header collection.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.Cookies">
            <summary>
            Gets a collection used to manipulate the Set-Cookie header.
            </summary>
            <returns>A collection used to manipulate the Set-Cookie header.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.ContentLength">
            <summary>
            Gets or sets the Content-Length header.
            </summary>
            <returns>The Content-Length header.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.ContentType">
            <summary>
            Gets or sets the Content-Type header.
            </summary>
            <returns>The Content-Type header.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.Expires">
            <summary>
            Gets or sets the Expires header.
            </summary>
            <returns>The Expires header.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.ETag">
            <summary>
            Gets or sets the E-Tag header.
            </summary>
            <returns>The E-Tag header.</returns>
        </member>
        <member name="P:LibOwin.OwinResponse.Body">
            <summary>
            Gets or sets the owin.ResponseBody Stream.
            </summary>
            <returns>The owin.ResponseBody Stream.</returns>
        </member>
        <member name="M:LibOwin.OwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object)">
            <summary>
            Registers for an event that fires when the response headers are sent.
            </summary>
            <param name="callback">The callback method.</param>
            <param name="state">The callback state.</param>
        </member>
        <member name="M:LibOwin.OwinResponse.Redirect(System.String)">
            <summary>
            Sets a 302 response status code and the Location header.
            </summary>
            <param name="location">The location where to redirect the client.</param>
        </member>
        <member name="M:LibOwin.OwinResponse.Write(System.String)">
            <summary>
            Writes the given text to the response body stream using UTF-8.
            </summary>
            <param name="text">The response data.</param>
        </member>
        <member name="M:LibOwin.OwinResponse.Write(System.Byte[])">
            <summary>
            Writes the given bytes to the response body stream.
            </summary>
            <param name="data">The response data.</param>
        </member>
        <member name="M:LibOwin.OwinResponse.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes the given bytes to the response body stream.
            </summary>
            <param name="data">The response data.</param>
            <param name="offset">The zero-based byte offset in the <paramref name="data" /> parameter at which to begin copying bytes.</param>
            <param name="count">The number of bytes to write.</param>
        </member>
        <member name="M:LibOwin.OwinResponse.WriteAsync(System.String)">
            <summary>
            Asynchronously writes the given text to the response body stream using UTF-8.
            </summary>
            <param name="text">The response data.</param>
            <returns>A Task tracking the state of the write operation.</returns>
        </member>
        <member name="M:LibOwin.OwinResponse.WriteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the given text to the response body stream using UTF-8.
            </summary>
            <param name="text">The response data.</param>
            <param name="token">A token used to indicate cancellation.</param>
            <returns>A Task tracking the state of the write operation.</returns>
        </member>
        <member name="M:LibOwin.OwinResponse.WriteAsync(System.Byte[])">
            <summary>
            Asynchronously writes the given bytes to the response body stream.
            </summary>
            <param name="data">The response data.</param>
            <returns>A Task tracking the state of the write operation.</returns>
        </member>
        <member name="M:LibOwin.OwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the given bytes to the response body stream.
            </summary>
            <param name="data">The response data.</param>
            <param name="token">A token used to indicate cancellation.</param>
            <returns>A Task tracking the state of the write operation.</returns>
        </member>
        <member name="M:LibOwin.OwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the given bytes to the response body stream.
            </summary>
            <param name="data">The response data.</param>
            <param name="offset">The zero-based byte offset in the <paramref name="data" /> parameter at which to begin copying bytes.</param>
            <param name="count">The number of bytes to write.</param>
            <param name="token">A token used to indicate cancellation.</param>
            <returns>A Task tracking the state of the write operation.</returns>
        </member>
        <member name="M:LibOwin.OwinResponse.Get``1(System.String)">
            <summary>
            Gets a value from the OWIN environment, or returns default(T) if not present.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to get.</param>
            <returns>The value with the specified key or the default(T) if not present.</returns>
        </member>
        <member name="M:LibOwin.OwinResponse.Set``1(System.String,``0)">
            <summary>
            Sets the given key and value in the OWIN environment.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="key">The key of the value to set.</param>
            <param name="value">The value to set.</param>
            <returns>This instance.</returns>
        </member>
        <member name="T:LibOwin.PathString">
            <summary>
            Provides correct escaping for Path and PathBase values when needed to reconstruct a request or redirect URI string
            </summary>
        </member>
        <member name="F:LibOwin.PathString.Empty">
            <summary>
            Represents the empty path. This field is read-only.
            </summary>
        </member>
        <member name="M:LibOwin.PathString.#ctor(System.String)">
            <summary>
            Initialize the path string with a given value. This value must be in un-escaped format. Use
            PathString.FromUriComponent(value) if you have a path value which is in an escaped format.
            </summary>
            <param name="value">The unescaped path to be assigned to the Value property.</param>
        </member>
        <member name="P:LibOwin.PathString.Value">
            <summary>
            The unescaped path value
            </summary>
        </member>
        <member name="P:LibOwin.PathString.HasValue">
            <summary>
            True if the path is not empty
            </summary>
        </member>
        <member name="M:LibOwin.PathString.ToString">
            <summary>
            Provides the path string escaped in a way which is correct for combining into the URI representation.
            </summary>
            <returns>The escaped path value</returns>
        </member>
        <member name="M:LibOwin.PathString.ToUriComponent">
            <summary>
            Provides the path string escaped in a way which is correct for combining into the URI representation.
            </summary>
            <returns>The escaped path value</returns>
        </member>
        <member name="M:LibOwin.PathString.FromUriComponent(System.String)">
            <summary>
            Returns an PathString given the path as it is escaped in the URI format. The string MUST NOT contain any
            value that is not a path.
            </summary>
            <param name="uriComponent">The escaped path as it appears in the URI format.</param>
            <returns>The resulting PathString</returns>
        </member>
        <member name="M:LibOwin.PathString.FromUriComponent(System.Uri)">
            <summary>
            Returns an PathString given the path as from a Uri object. Relative Uri objects are not supported.
            </summary>
            <param name="uri">The Uri object</param>
            <returns>The resulting PathString</returns>
        </member>
        <member name="M:LibOwin.PathString.StartsWithSegments(LibOwin.PathString)">
            <summary>
            Checks if this instance starts with or exactly matches the other instance. Only full segments are matched.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.PathString.StartsWithSegments(LibOwin.PathString,LibOwin.PathString@)">
            <summary>
            Checks if this instance starts with or exactly matches the other instance. Only full segments are matched.
            </summary>
            <param name="other"></param>
            <param name="remaining">Any remaining segments from this instance not included in the other instance.</param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.PathString.Add(LibOwin.PathString)">
            <summary>
            Adds two PathString instances into a combined PathString value.
            </summary>
            <returns>The combined PathString value</returns>
        </member>
        <member name="M:LibOwin.PathString.Add(LibOwin.QueryString)">
            <summary>
            Combines a PathString and QueryString into the joined URI formatted string value.
            </summary>
            <returns>The joined URI formatted string value</returns>
        </member>
        <member name="M:LibOwin.PathString.Equals(LibOwin.PathString)">
            <summary>
            Compares this PathString value to another value. The default comparison is StringComparison.OrdinalIgnoreCase.
            </summary>
            <param name="other">The second PathString for comparison.</param>
            <returns>True if both PathString values are equal</returns>
        </member>
        <member name="M:LibOwin.PathString.Equals(LibOwin.PathString,System.StringComparison)">
            <summary>
            Compares this PathString value to another value using a specific StringComparison type
            </summary>
            <param name="other">The second PathString for comparison</param>
            <param name="comparisonType">The StringComparison type to use</param>
            <returns>True if both PathString values are equal</returns>
        </member>
        <member name="M:LibOwin.PathString.Equals(System.Object)">
            <summary>
            Compares this PathString value to another value. The default comparison is StringComparison.OrdinalIgnoreCase.
            </summary>
            <param name="obj">The second PathString for comparison.</param>
            <returns>True if both PathString values are equal</returns>
        </member>
        <member name="M:LibOwin.PathString.GetHashCode">
            <summary>
            Returns the hash code for the PathString value. The hash code is provided by the OrdinalIgnoreCase implementation.
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:LibOwin.PathString.op_Equality(LibOwin.PathString,LibOwin.PathString)">
            <summary>
            Operator call through to Equals
            </summary>
            <param name="left">The left parameter</param>
            <param name="right">The right parameter</param>
            <returns>True if both PathString values are equal</returns>
        </member>
        <member name="M:LibOwin.PathString.op_Inequality(LibOwin.PathString,LibOwin.PathString)">
            <summary>
            Operator call through to Equals
            </summary>
            <param name="left">The left parameter</param>
            <param name="right">The right parameter</param>
            <returns>True if both PathString values are not equal</returns>
        </member>
        <member name="M:LibOwin.PathString.op_Addition(LibOwin.PathString,LibOwin.PathString)">
            <summary>
            Operator call through to Add
            </summary>
            <param name="left">The left parameter</param>
            <param name="right">The right parameter</param>
            <returns>The PathString combination of both values</returns>
        </member>
        <member name="M:LibOwin.PathString.op_Addition(LibOwin.PathString,LibOwin.QueryString)">
            <summary>
            Operator call through to Add
            </summary>
            <param name="left">The left parameter</param>
            <param name="right">The right parameter</param>
            <returns>The PathString combination of both values</returns>
        </member>
        <member name="T:LibOwin.QueryString">
            <summary>
            Provides correct handling for QueryString value when needed to reconstruct a request or redirect URI string
            </summary>
        </member>
        <member name="F:LibOwin.QueryString.Empty">
            <summary>
            Represents the empty query string. This field is read-only.
            </summary>
        </member>
        <member name="M:LibOwin.QueryString.#ctor(System.String)">
            <summary>
            Initalize the query string with a given value. This value must be in escaped and delimited format without
            a leading '?' character.
            </summary>
            <param name="value">The query string to be assigned to the Value property.</param>
        </member>
        <member name="M:LibOwin.QueryString.#ctor(System.String,System.String)">
            <summary>
            Initialize a query string with a single given parameter name and value. The value is
            </summary>
            <param name="name">The unencoded parameter name</param>
            <param name="value">The unencoded parameter value</param>
        </member>
        <member name="P:LibOwin.QueryString.Value">
            <summary>
            The unescaped query string without the leading '?' character
            </summary>
        </member>
        <member name="P:LibOwin.QueryString.HasValue">
            <summary>
            True if the query string is not empty
            </summary>
        </member>
        <member name="M:LibOwin.QueryString.ToString">
            <summary>
            Provides the query string escaped in a way which is correct for combining into the URI representation.
            A leading '?' character will be prepended unless the Value is null or empty. Characters which are potentally
            dangerous are escaped.
            </summary>
            <returns>The query string value</returns>
        </member>
        <member name="M:LibOwin.QueryString.ToUriComponent">
            <summary>
            Provides the query string escaped in a way which is correct for combining into the URI representation.
            A leading '?' character will be prepended unless the Value is null or empty. Characters which are potentially
            dangerous are escaped.
            </summary>
            <returns>The query string value</returns>
        </member>
        <member name="M:LibOwin.QueryString.FromUriComponent(System.String)">
            <summary>
            Returns an QueryString given the query as it is escaped in the URI format. The string MUST NOT contain any
            value that is not a query.
            </summary>
            <param name="uriComponent">The escaped query as it appears in the URI format.</param>
            <returns>The resulting QueryString</returns>
        </member>
        <member name="M:LibOwin.QueryString.FromUriComponent(System.Uri)">
            <summary>
            Returns an QueryString given the query as from a Uri object. Relative Uri objects are not supported.
            </summary>
            <param name="uri">The Uri object</param>
            <returns>The resulting QueryString</returns>
        </member>
        <member name="M:LibOwin.QueryString.Equals(LibOwin.QueryString)">
            <summary>
            Indicates whether the current instance is equal to the other instance.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.QueryString.Equals(System.Object)">
            <summary>
            Indicates whether the current instance is equal to the other instance.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.QueryString.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LibOwin.QueryString.op_Equality(LibOwin.QueryString,LibOwin.QueryString)">
            <summary>
            Compares the two instances for equality.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.QueryString.op_Inequality(LibOwin.QueryString,LibOwin.QueryString)">
            <summary>
            Compares the two instances for inequality.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:LibOwin.ReadableStringCollection">
            <summary>
            Accessors for query, forms, etc.
            </summary>
        </member>
        <member name="M:LibOwin.ReadableStringCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})">
            <summary>
            Create a new wrapper
            </summary>
            <param name="store"></param>
        </member>
        <member name="P:LibOwin.ReadableStringCollection.Item(System.String)">
            <summary>
            Get the associated value from the collection.  Multiple values will be merged.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.ReadableStringCollection.Get(System.String)">
            <summary>
            Get the associated value from the collection.  Multiple values will be merged.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.ReadableStringCollection.GetValues(System.String)">
            <summary>
            Get the associated values from the collection in their original format.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.ReadableStringCollection.GetEnumerator">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:LibOwin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:LibOwin.RequestCookieCollection">
            <summary>
            A wrapper for the request Cookie header
            </summary>
        </member>
        <member name="M:LibOwin.RequestCookieCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Create a new wrapper
            </summary>
            <param name="store"></param>
        </member>
        <member name="P:LibOwin.RequestCookieCollection.Item(System.String)">
            <summary>
            Returns null rather than throwing KeyNotFoundException
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LibOwin.RequestCookieCollection.GetEnumerator">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:LibOwin.RequestCookieCollection.System#Collections#IEnumerable#GetEnumerator">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:LibOwin.ResponseCookieCollection">
            <summary>
            A wrapper for the response Set-Cookie header
            </summary>
        </member>
        <member name="M:LibOwin.ResponseCookieCollection.#ctor(LibOwin.IHeaderDictionary)">
            <summary>
            Create a new wrapper
            </summary>
            <param name="headers"></param>
        </member>
        <member name="M:LibOwin.ResponseCookieCollection.Append(System.String,System.String)">
            <summary>
            Add a new cookie and value
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:LibOwin.ResponseCookieCollection.Append(System.String,System.String,LibOwin.CookieOptions)">
            <summary>
            Add a new cookie
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="M:LibOwin.ResponseCookieCollection.Delete(System.String)">
            <summary>
            Sets an expired cookie
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:LibOwin.ResponseCookieCollection.Delete(System.String,LibOwin.CookieOptions)">
            <summary>
            Sets an expired cookie
            </summary>
            <param name="key"></param>
            <param name="options"></param>
        </member>
        <member name="M:LibOwin.IOwinResponseExtension.OnSendingHeaders``1(LibOwin.IOwinResponse,System.Action{``0},``0)">
            <summary>
            Registers for an event that fires when the response headers are sent.
            </summary>
            <param name="response">The owin response</param>
            <param name="callback">The callback method.</param>
            <param name="state">The callback state.</param>
        </member>
        <member name="M:LibOwin.OwinEnvironmentExtension.AsOwinContext(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an <see cref="T:LibOwin.OwinContext"/> with the environment.
            </summary>
            <param name="env">Environment to wrap in an <see cref="T:LibOwin.OwinContext"/>.</param>
            <returns>New <see cref="T:LibOwin.OwinContext"/>.</returns>
        </member>
        <member name="T:Uservice.Logging.RequestLogging">
            <summary>
            Middleware for request and response logging
            </summary>
        </member>
        <member name="T:Uservice.Logging.PerformanceLogging">
            <summary>
            Middleware for performance logging
            </summary>
        </member>
        <member name="T:Uservice.Logging.CorrelationToken">
            <summary>
            Middleware for creating and reading correlation tokens
            </summary>
        </member>
        <member name="T:Uservice.Logging.GlobalErrorLogging">
            <summary>
            Middleware that catches and logs all otherwise unhandled exceptions
            </summary>
        </member>
        <member name="M:Uservice.Logging.MonitoringMiddleware.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Monitoring middleware AppFunc implementation that can be added to an OWIN pipeline
            </summary>
        </member>
    </members>
</doc>
